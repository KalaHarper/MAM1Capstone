Use case:
User starts program. Vending machine displays welcome menu with options
User most likely selects first option; displaying items
User is returned to main menu, user most likely selects purchase
Vending machine makes internal calculations based on user's selection
Vending machine prompts user for currency, most likely in coins
Vending machine makes internal calculation for fewest amount of coins to return
Vending machine dispenses product and appropriate change; updates internal log

Start Machine
	1)(Main) Construct a new Menu object with System.in , System.out
	parameters
	2)(Main)Construct a new VendingMachineCLI object with an instance of
	Menu object as a parameter
	Set Initial State
		3) (VendingMachineCLI Constructor)Construct new Item
		Stockable
		4)(VendingMachineCLI Constructor)Construct new Currency
		Stockable
	Display Opening Menu
		5)(Main)VendingMachineCLI instance calls run method; Starts
		open while loop {String = menu method call
		getChoiceFromOptions(Objects[] options)
		while


1) COMPLETE!! WOOP! WOOP!
2) COMPLETE!! WOOP! WOOP!
3) WOOP! THERE IT IS!
4) ....pretty sure?
5)
6)
7)
8)
9)
10)
11)

Make a calculator

TO DO LIST:
fix order items show up in display screen - K HW
add am/pm to log - K HW

log other actions beside feed money
change Ledger so it prints the correct info
Make sure inventory restocks when product restarts
Fix format of setCost
figure out 'current money provided' location
dispense products as they are selected
dispensing item displays name, cost, money remaining, and the
        weird message
update balances and inventory after dispensed item
finish transaction: dispenses literal change, returns to main menu
create audit log in Log.txt with localdate/time and currency
create tests

meet to practice presentation
discuss pair programming experience and how to communicate needs in the future

optional hidden menu